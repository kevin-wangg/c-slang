// Generated from ./src/lang/wlp3.g4 by ANTLR 4.9.0-SNAPSHOT

import { ATN } from 'antlr4ts/atn/ATN'
import { ATNDeserializer } from 'antlr4ts/atn/ATNDeserializer'
import { LexerATNSimulator } from 'antlr4ts/atn/LexerATNSimulator'
import { CharStream } from 'antlr4ts/CharStream'
import { NotNull } from 'antlr4ts/Decorators'
import { Override } from 'antlr4ts/Decorators'
import { Lexer } from 'antlr4ts/Lexer'
import * as Utils from 'antlr4ts/misc/Utils'
import { RuleContext } from 'antlr4ts/RuleContext'
import { Vocabulary } from 'antlr4ts/Vocabulary'
import { VocabularyImpl } from 'antlr4ts/VocabularyImpl'

export class wlp3Lexer extends Lexer {
    public static readonly T__0 = 1
    public static readonly T__1 = 2
    public static readonly T__2 = 3
    public static readonly T__3 = 4
    public static readonly T__4 = 5
    public static readonly T__5 = 6
    public static readonly T__6 = 7
    public static readonly T__7 = 8
    public static readonly T__8 = 9
    public static readonly T__9 = 10
    public static readonly T__10 = 11
    public static readonly T__11 = 12
    public static readonly T__12 = 13
    public static readonly T__13 = 14
    public static readonly T__14 = 15
    public static readonly T__15 = 16
    public static readonly T__16 = 17
    public static readonly T__17 = 18
    public static readonly T__18 = 19
    public static readonly T__19 = 20
    public static readonly T__20 = 21
    public static readonly T__21 = 22
    public static readonly T__22 = 23
    public static readonly T__23 = 24
    public static readonly T__24 = 25
    public static readonly T__25 = 26
    public static readonly T__26 = 27
    public static readonly T__27 = 28
    public static readonly T__28 = 29
    public static readonly T__29 = 30
    public static readonly T__30 = 31
    public static readonly T__31 = 32
    public static readonly T__32 = 33
    public static readonly T__33 = 34
    public static readonly T__34 = 35
    public static readonly T__35 = 36
    public static readonly WS = 37
    public static readonly INT = 38
    public static readonly STRING = 39
    public static readonly BOOL = 40
    public static readonly ID = 41

    // tslint:disable:no-trailing-whitespace
    public static readonly channelNames: string[] = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN']

    // tslint:disable:no-trailing-whitespace
    public static readonly modeNames: string[] = ['DEFAULT_MODE']

    public static readonly ruleNames: string[] = [
        'T__0',
        'T__1',
        'T__2',
        'T__3',
        'T__4',
        'T__5',
        'T__6',
        'T__7',
        'T__8',
        'T__9',
        'T__10',
        'T__11',
        'T__12',
        'T__13',
        'T__14',
        'T__15',
        'T__16',
        'T__17',
        'T__18',
        'T__19',
        'T__20',
        'T__21',
        'T__22',
        'T__23',
        'T__24',
        'T__25',
        'T__26',
        'T__27',
        'T__28',
        'T__29',
        'T__30',
        'T__31',
        'T__32',
        'T__33',
        'T__34',
        'T__35',
        'WS',
        'INT',
        'STRING',
        'BOOL',
        'ID'
    ]

    private static readonly _LITERAL_NAMES: Array<string | undefined> = [
        undefined,
        "'int'",
        "'main'",
        "'('",
        "')'",
        "'{'",
        "'}'",
        "','",
        "'bool'",
        "'string'",
        "'int*'",
        "'bool*'",
        "'string*'",
        "'malloc'",
        "'*'",
        "'&'",
        "'='",
        "';'",
        "'if'",
        "'else'",
        "'while'",
        "'printf'",
        "'return'",
        "'free'",
        "'+'",
        "'-'",
        "'/'",
        "'%'",
        "'=='",
        "'>'",
        "'<'",
        "'<='",
        "'>='",
        "'!='",
        "'&&'",
        "'||'",
        "'!'"
    ]
    private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        'WS',
        'INT',
        'STRING',
        'BOOL',
        'ID'
    ]
    public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(
        wlp3Lexer._LITERAL_NAMES,
        wlp3Lexer._SYMBOLIC_NAMES,
        []
    )

    // @Override
    // @NotNull
    public get vocabulary(): Vocabulary {
        return wlp3Lexer.VOCABULARY
    }
    // tslint:enable:no-trailing-whitespace

    constructor(input: CharStream) {
        super(input)
        this._interp = new LexerATNSimulator(wlp3Lexer._ATN, this)
    }

    // @Override
    public get grammarFileName(): string {
        return 'wlp3.g4'
    }

    // @Override
    public get ruleNames(): string[] {
        return wlp3Lexer.ruleNames
    }

    // @Override
    public get serializedATN(): string {
        return wlp3Lexer._serializedATN
    }

    // @Override
    public get channelNames(): string[] {
        return wlp3Lexer.channelNames
    }

    // @Override
    public get modeNames(): string[] {
        return wlp3Lexer.modeNames
    }

    public static readonly _serializedATN: string =
        '\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02+\xFD\b\x01\x04' +
        '\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04' +
        '\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r' +
        '\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12' +
        '\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17' +
        '\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C' +
        '\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04"\t"\x04' +
        "#\t#\x04$\t$\x04%\t%\x04&\t&\x04'\t'\x04(\t(\x04)\t)\x04*\t*\x03\x02" +
        '\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04' +
        '\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03' +
        '\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03' +
        '\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03' +
        '\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E' +
        '\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11' +
        '\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14' +
        '\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16' +
        '\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17' +
        '\x03\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19' +
        '\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D' +
        '\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03' +
        '!\x03"\x03"\x03"\x03#\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03&\x06&' +
        "\xD9\n&\r&\x0E&\xDA\x03&\x03&\x03'\x06'\xE0\n'\r'\x0E'\xE1\x03(\x03" +
        '(\x06(\xE6\n(\r(\x0E(\xE7\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03)\x03' +
        ')\x03)\x03)\x05)\xF5\n)\x03*\x03*\x07*\xF9\n*\f*\x0E*\xFC\v*\x02\x02\x02' +
        '+\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F' +
        '\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F' +
        "\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14'\x02\x15)\x02\x16" +
        '+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E' +
        ';\x02\x1F=\x02 ?\x02!A\x02"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02' +
        ')Q\x02*S\x02+\x03\x02\x07\x05\x02\v\f\x0F\x0F""\x03\x022;\x05\x022;' +
        'C\\c|\x05\x02C\\aac|\x06\x022;C\\aac|\x02\u0101\x02\x03\x03\x02\x02\x02' +
        '\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02' +
        '\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02' +
        '\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02' +
        '\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02' +
        '\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02' +
        "#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02'\x03\x02\x02\x02\x02)\x03" +
        '\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02' +
        '\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x02' +
        '7\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02' +
        '\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02' +
        '\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03' +
        '\x02\x02\x02\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02' +
        '\x02\x02S\x03\x02\x02\x02\x03U\x03\x02\x02\x02\x05Y\x03\x02\x02\x02\x07' +
        '^\x03\x02\x02\x02\t`\x03\x02\x02\x02\vb\x03\x02\x02\x02\rd\x03\x02\x02' +
        '\x02\x0Ff\x03\x02\x02\x02\x11h\x03\x02\x02\x02\x13m\x03\x02\x02\x02\x15' +
        't\x03\x02\x02\x02\x17y\x03\x02\x02\x02\x19\x7F\x03\x02\x02\x02\x1B\x87' +
        '\x03\x02\x02\x02\x1D\x8E\x03\x02\x02\x02\x1F\x90\x03\x02\x02\x02!\x92' +
        "\x03\x02\x02\x02#\x94\x03\x02\x02\x02%\x96\x03\x02\x02\x02'\x99\x03\x02" +
        '\x02\x02)\x9E\x03\x02\x02\x02+\xA4\x03\x02\x02\x02-\xAB\x03\x02\x02\x02' +
        '/\xB2\x03\x02\x02\x021\xB7\x03\x02\x02\x023\xB9\x03\x02\x02\x025\xBB\x03' +
        '\x02\x02\x027\xBD\x03\x02\x02\x029\xBF\x03\x02\x02\x02;\xC2\x03\x02\x02' +
        '\x02=\xC4\x03\x02\x02\x02?\xC6\x03\x02\x02\x02A\xC9\x03\x02\x02\x02C\xCC' +
        '\x03\x02\x02\x02E\xCF\x03\x02\x02\x02G\xD2\x03\x02\x02\x02I\xD5\x03\x02' +
        '\x02\x02K\xD8\x03\x02\x02\x02M\xDF\x03\x02\x02\x02O\xE3\x03\x02\x02\x02' +
        'Q\xF4\x03\x02\x02\x02S\xF6\x03\x02\x02\x02UV\x07k\x02\x02VW\x07p\x02\x02' +
        'WX\x07v\x02\x02X\x04\x03\x02\x02\x02YZ\x07o\x02\x02Z[\x07c\x02\x02[\\' +
        '\x07k\x02\x02\\]\x07p\x02\x02]\x06\x03\x02\x02\x02^_\x07*\x02\x02_\b\x03' +
        '\x02\x02\x02`a\x07+\x02\x02a\n\x03\x02\x02\x02bc\x07}\x02\x02c\f\x03\x02' +
        '\x02\x02de\x07\x7F\x02\x02e\x0E\x03\x02\x02\x02fg\x07.\x02\x02g\x10\x03' +
        '\x02\x02\x02hi\x07d\x02\x02ij\x07q\x02\x02jk\x07q\x02\x02kl\x07n\x02\x02' +
        'l\x12\x03\x02\x02\x02mn\x07u\x02\x02no\x07v\x02\x02op\x07t\x02\x02pq\x07' +
        'k\x02\x02qr\x07p\x02\x02rs\x07i\x02\x02s\x14\x03\x02\x02\x02tu\x07k\x02' +
        '\x02uv\x07p\x02\x02vw\x07v\x02\x02wx\x07,\x02\x02x\x16\x03\x02\x02\x02' +
        'yz\x07d\x02\x02z{\x07q\x02\x02{|\x07q\x02\x02|}\x07n\x02\x02}~\x07,\x02' +
        '\x02~\x18\x03\x02\x02\x02\x7F\x80\x07u\x02\x02\x80\x81\x07v\x02\x02\x81' +
        '\x82\x07t\x02\x02\x82\x83\x07k\x02\x02\x83\x84\x07p\x02\x02\x84\x85\x07' +
        'i\x02\x02\x85\x86\x07,\x02\x02\x86\x1A\x03\x02\x02\x02\x87\x88\x07o\x02' +
        '\x02\x88\x89\x07c\x02\x02\x89\x8A\x07n\x02\x02\x8A\x8B\x07n\x02\x02\x8B' +
        '\x8C\x07q\x02\x02\x8C\x8D\x07e\x02\x02\x8D\x1C\x03\x02\x02\x02\x8E\x8F' +
        '\x07,\x02\x02\x8F\x1E\x03\x02\x02\x02\x90\x91\x07(\x02\x02\x91 \x03\x02' +
        '\x02\x02\x92\x93\x07?\x02\x02\x93"\x03\x02\x02\x02\x94\x95\x07=\x02\x02' +
        '\x95$\x03\x02\x02\x02\x96\x97\x07k\x02\x02\x97\x98\x07h\x02\x02\x98&\x03' +
        '\x02\x02\x02\x99\x9A\x07g\x02\x02\x9A\x9B\x07n\x02\x02\x9B\x9C\x07u\x02' +
        '\x02\x9C\x9D\x07g\x02\x02\x9D(\x03\x02\x02\x02\x9E\x9F\x07y\x02\x02\x9F' +
        '\xA0\x07j\x02\x02\xA0\xA1\x07k\x02\x02\xA1\xA2\x07n\x02\x02\xA2\xA3\x07' +
        'g\x02\x02\xA3*\x03\x02\x02\x02\xA4\xA5\x07r\x02\x02\xA5\xA6\x07t\x02\x02' +
        '\xA6\xA7\x07k\x02\x02\xA7\xA8\x07p\x02\x02\xA8\xA9\x07v\x02\x02\xA9\xAA' +
        '\x07h\x02\x02\xAA,\x03\x02\x02\x02\xAB\xAC\x07t\x02\x02\xAC\xAD\x07g\x02' +
        '\x02\xAD\xAE\x07v\x02\x02\xAE\xAF\x07w\x02\x02\xAF\xB0\x07t\x02\x02\xB0' +
        '\xB1\x07p\x02\x02\xB1.\x03\x02\x02\x02\xB2\xB3\x07h\x02\x02\xB3\xB4\x07' +
        't\x02\x02\xB4\xB5\x07g\x02\x02\xB5\xB6\x07g\x02\x02\xB60\x03\x02\x02\x02' +
        '\xB7\xB8\x07-\x02\x02\xB82\x03\x02\x02\x02\xB9\xBA\x07/\x02\x02\xBA4\x03' +
        "\x02\x02\x02\xBB\xBC\x071\x02\x02\xBC6\x03\x02\x02\x02\xBD\xBE\x07'\x02" +
        '\x02\xBE8\x03\x02\x02\x02\xBF\xC0\x07?\x02\x02\xC0\xC1\x07?\x02\x02\xC1' +
        ':\x03\x02\x02\x02\xC2\xC3\x07@\x02\x02\xC3<\x03\x02\x02\x02\xC4\xC5\x07' +
        '>\x02\x02\xC5>\x03\x02\x02\x02\xC6\xC7\x07>\x02\x02\xC7\xC8\x07?\x02\x02' +
        '\xC8@\x03\x02\x02\x02\xC9\xCA\x07@\x02\x02\xCA\xCB\x07?\x02\x02\xCBB\x03' +
        '\x02\x02\x02\xCC\xCD\x07#\x02\x02\xCD\xCE\x07?\x02\x02\xCED\x03\x02\x02' +
        '\x02\xCF\xD0\x07(\x02\x02\xD0\xD1\x07(\x02\x02\xD1F\x03\x02\x02\x02\xD2' +
        '\xD3\x07~\x02\x02\xD3\xD4\x07~\x02\x02\xD4H\x03\x02\x02\x02\xD5\xD6\x07' +
        '#\x02\x02\xD6J\x03\x02\x02\x02\xD7\xD9\t\x02\x02\x02\xD8\xD7\x03\x02\x02' +
        '\x02\xD9\xDA\x03\x02\x02\x02\xDA\xD8\x03\x02\x02\x02\xDA\xDB\x03\x02\x02' +
        '\x02\xDB\xDC\x03\x02\x02\x02\xDC\xDD\b&\x02\x02\xDDL\x03\x02\x02\x02\xDE' +
        '\xE0\t\x03\x02\x02\xDF\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1' +
        '\xDF\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE2N\x03\x02\x02\x02\xE3' +
        '\xE5\x07$\x02\x02\xE4\xE6\t\x04\x02\x02\xE5\xE4\x03\x02\x02\x02\xE6\xE7' +
        '\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE7\xE8\x03\x02\x02\x02\xE8\xE9' +
        '\x03\x02\x02\x02\xE9\xEA\x07$\x02\x02\xEAP\x03\x02\x02\x02\xEB\xEC\x07' +
        'v\x02\x02\xEC\xED\x07t\x02\x02\xED\xEE\x07w\x02\x02\xEE\xF5\x07g\x02\x02' +
        '\xEF\xF0\x07h\x02\x02\xF0\xF1\x07c\x02\x02\xF1\xF2\x07n\x02\x02\xF2\xF3' +
        '\x07u\x02\x02\xF3\xF5\x07g\x02\x02\xF4\xEB\x03\x02\x02\x02\xF4\xEF\x03' +
        '\x02\x02\x02\xF5R\x03\x02\x02\x02\xF6\xFA\t\x05\x02\x02\xF7\xF9\t\x06' +
        '\x02\x02\xF8\xF7\x03\x02\x02\x02\xF9\xFC\x03\x02\x02\x02\xFA\xF8\x03\x02' +
        '\x02\x02\xFA\xFB\x03\x02\x02\x02\xFBT\x03\x02\x02\x02\xFC\xFA\x03\x02' +
        '\x02\x02\b\x02\xDA\xE1\xE7\xF4\xFA\x03\b\x02\x02'
    public static __ATN: ATN
    public static get _ATN(): ATN {
        if (!wlp3Lexer.__ATN) {
            wlp3Lexer.__ATN = new ATNDeserializer().deserialize(
                Utils.toCharArray(wlp3Lexer._serializedATN)
            )
        }

        return wlp3Lexer.__ATN
    }
}
